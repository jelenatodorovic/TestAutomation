<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="143581" started-at="2016-12-09T14:30:50Z" finished-at="2016-12-09T14:33:13Z">
    <groups>
    </groups>
    <test name="Test1" duration-ms="143581" started-at="2016-12-09T14:30:50Z" finished-at="2016-12-09T14:33:13Z">
      <class name="test.registration.TestRegistrationRequiredInputFields">
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.registration.TestRegistrationRequiredInputFields@5cc7c2a6]" name="setUp" is-config="true" duration-ms="38634" started-at="2016-12-09T15:31:58Z" finished-at="2016-12-09T15:32:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="test()[pri:0, instance:test.registration.TestRegistrationRequiredInputFields@5cc7c2a6]" name="test" duration-ms="15998" started-at="2016-12-09T15:32:36Z" finished-at="2016-12-09T15:32:52Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Thank you for your registration] but found [Error: Username already exists]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Thank you for your registration] but found [Error: Username already exists]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at org.testng.Assert.assertEquals(Assert.java:188)
	at test.registration.TestRegistrationRequiredInputFields.test(TestRegistrationRequiredInputFields.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.registration.TestRegistrationRequiredInputFields@5cc7c2a6]" name="tearDown" is-config="true" duration-ms="16" started-at="2016-12-09T15:32:52Z" finished-at="2016-12-09T15:32:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.registration.TestRegistrationRequiredInputFields -->
      <class name="test.registration.TestRegistrationIncorrectValuesForPhoneNumber">
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.registration.TestRegistrationIncorrectValuesForPhoneNumber@b97c004]" name="setUp" is-config="true" duration-ms="15479" started-at="2016-12-09T15:32:52Z" finished-at="2016-12-09T15:33:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="f()[pri:0, instance:test.registration.TestRegistrationIncorrectValuesForPhoneNumber@b97c004]" name="f" duration-ms="5316" started-at="2016-12-09T15:33:08Z" finished-at="2016-12-09T15:33:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.registration.TestRegistrationIncorrectValuesForPhoneNumber@b97c004]" name="tearDown" is-config="true" duration-ms="16" started-at="2016-12-09T15:33:13Z" finished-at="2016-12-09T15:33:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.registration.TestRegistrationIncorrectValuesForPhoneNumber -->
      <class name="test.drugi.DrugiTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:test.drugi.DrugiTest@3c09711b]" name="setUp" is-config="true" duration-ms="60757" started-at="2016-12-09T15:30:50Z" finished-at="2016-12-09T15:31:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="test()[pri:0, instance:test.drugi.DrugiTest@3c09711b]" name="test" duration-ms="7318" started-at="2016-12-09T15:31:50Z" finished-at="2016-12-09T15:31:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:test.drugi.DrugiTest@3c09711b]" name="tearDown" is-config="true" duration-ms="31" started-at="2016-12-09T15:31:58Z" finished-at="2016-12-09T15:31:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.drugi.DrugiTest -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
